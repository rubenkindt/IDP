/*Ruben Kindt
 * docenten.idp
 *
 */

vocabulary V {
    type Docent constructed from { DVT , JVE , TGO }
	type Vak constructed from { ApplicatieArch, ArtificieleInt,
									EmbeddedDinges, Graphics, ProductCert }
    Geeft(Docent, Vak)

    type StudiePunten isa int
    Punten(Vak): StudiePunten
}

structure S : V {
    StudiePunten = { 0..10 }
    Punten = { 
      ApplicatieArch -> 4; 
      ArtificieleInt -> 6;
			EmbeddedDinges -> 5; 
      Graphics -> 5; 
      ProductCert -> 6; }
}

theory T : V {
  ~Geeft(JVE,ProductCert).
  ~Geeft(JVE,EmbeddedDinges).
  //JVE zeker niet de vakken ProductCert of EmbeddedDingesgeeft

  Geeft(TGO,Graphics).
  //TGO het vak Graphics geeft

  !vak1: #{ d[Docent]: Geeft(d,vak1)} = 1.
  //elk vak exact een docent


  !docent1: docent1~=DVT =>2 =< #{ v: Geeft(docent1,v)}.
  //elke docent behalve DVT minstens 2 vakken geeft

  ?docent1: 10 >= sum{ vak1[Vak]: Geeft(docent1,vak1): Punten(vak1)}.
  //p[StudiePunten] : punten(#{v[Vak]: Geeft(docent1,v)})  } <= 10.
  //tot aantal studiepunten voor vakken van de zelfde docent max 10


}

procedure main() {
    stdoptions.nbmodels = 0
    printmodels(modelexpand(T,S))
}
